[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/myry/Documents/Github/esp32s3-develop-board/02.Software/02_ESP-IDF/03_WS_Blink/build/bootloader/esp-idf/esptool_py && /Users/myry/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/myry/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/myry/Documents/Github/esp32s3-develop-board/02.Software/02_ESP-IDF/03_WS_Blink/build/bootloader/bootloader.bin
Bootloader binary size 0x5210 bytes. 0x2df0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink_example_main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable 03_WS_Blink.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/myry/Documents/Github/esp32s3-develop-board/02.Software/02_ESP-IDF/03_WS_Blink/build/03_WS_Blink.bin
[9/10] cd /Users/myry/Documents/Github/esp32s3-develop-board/02.Software/02_ESP-IDF/03_WS_Blink/build/esp-idf/esptool_py && /Users/myry/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/myry/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/myry/Documents/Github/esp32s3-develop-board/02.Software/02_ESP-IDF/03_WS_Blink/build/partition_table/partition-table.bin /Users/myry/Documents/Github/esp32s3-develop-board/02.Software/02_ESP-IDF/03_WS_Blink/build/03_WS_Blink.bin
03_WS_Blink.bin binary size 0x39940 bytes. Smallest app partition is 0x100000 bytes. 0xc66c0 bytes (78%) free.
[9/10] cd /Users/myry/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/myry/esp/esp-idf -D "SERIAL_TOOL=/Users/myry/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/myry/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/myry/Documents/Github/esp32s3-develop-board/02.Software/02_ESP-IDF/03_WS_Blink/build -P /Users/myry/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.wchusbserial130 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 03_WS_Blink.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.wchusbserial130
Connecting.........
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: cc:ba:97:05:0d:b4
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00049fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21008 bytes to 13371...
Writing at 0x00000000... (100 %)
Wrote 21008 bytes (13371 compressed) at 0x00000000 in 0.6 seconds (effective 304.0 kbit/s)...
Hash of data verified.
Compressed 235840 bytes to 125973...
Writing at 0x00010000... (12 %)
Writing at 0x0001c085... (25 %)
Writing at 0x00023ae7... (37 %)
Writing at 0x0002a5a0... (50 %)
Writing at 0x00030677... (62 %)
Writing at 0x00038ce4... (75 %)
Writing at 0x0003eb71... (87 %)
Writing at 0x00045173... (100 %)
Wrote 235840 bytes (125973 compressed) at 0x00010000 in 3.1 seconds (effective 615.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 607.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
